name: Build, Test, and Release for ShadowMask

on:
  release:
    types: [created]

permissions:
  contents: write
  id-token: write  # Required for trusted PyPI publishing

jobs:
  check:
    name: Lint, Type Check, and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx xvfb

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-qt flake8 mypy

      - name: Lint with flake8
        run: flake8 src/ tests/

      - name: Type check with mypy
        run: mypy src/

      - name: Run GUI and unit tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: pytest tests/ --cov=src --cov-report=xml

  build_wheels:
    name: Build PyPI Package
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build tools
        run: python -m pip install --upgrade build

      - name: Build wheel and sdist
        run: python -m build

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*

  build_executables:
    name: Build PyInstaller Executables
    needs: check
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: shadowmask-linux
            pyinstaller_name: shadowmask-linux
          - os: windows-latest
            artifact_name: shadowmask-windows.exe
            pyinstaller_name: shadowmask-windows.exe
          - os: macos-latest
            artifact_name: shadowmask-macos
            pyinstaller_name: shadowmask-macos
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build executable
        run: |
          pyinstaller src/shadowmask/gui.py --onefile --name ${{ matrix.pyinstaller_name }}

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.pyinstaller_name }}

  build_android:
    name: Build Android APK
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Buildozer and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libffi-dev libssl-dev zlib1g-dev python3-dev openjdk-8-jdk unzip
          pip install buildozer

      - name: Build APK
        run: buildozer android debug

      - name: Find APK
        id: find_apk
        run: echo "APK_PATH=$(find . -name '*.apk' | head -n 1)" >> $GITHUB_ENV

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: shadowmask-android.apk
          path: ${{ env.APK_PATH }}

  publish_pypi:
    name: Publish to PyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/shadowmask
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

  github_release:
    name: Attach Binaries to GitHub Release
    needs: [build_executables, build_android]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: shadowmask-linux
          path: .
      - uses: actions/download-artifact@v3
        with:
          name: shadowmask-windows.exe
          path: .
      - uses: actions/download-artifact@v3
        with:
          name: shadowmask-macos
          path: .
      - uses: actions/download-artifact@v3
        with:
          name: shadowmask-android.apk
          path: .

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            shadowmask-linux
            shadowmask-windows.exe
            shadowmask-macos
            shadowmask-android.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
